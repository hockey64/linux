/*
 * Copyright 2016 Free Electrons
 * Copyright 2016 NextThing Co
 *
 * Myl√®ne Josserand <mylene.josserand@free-electrons.com>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;
#include "ntc-gr8.dtsi"
#include "sunxi-common-regulators.dtsi"

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	model = "NextThing Crumb";
	compatible = "nextthing,crumb", "nextthing,gr8";

	aliases {
		i2c0 = &i2c0;
		i2c1 = &i2c1;
		serial0 = &uart1;
		serial1 = &uart2;
		serial2 = &uart3;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

    leds {
        compatible = "gpio-leds";

        status {
            label = "chip:white:status";
            gpios = <&axp_gpio 2 GPIO_ACTIVE_HIGH>;
            default-state = "on";
        };
    };

	mmc0_pwrseq: mmc0_pwrseq {
		compatible = "mmc-pwrseq-simple";
		pinctrl-names = "default";
		pinctrl-0 = <&wifi_reg_on_pin_crumb>;
		reset-gpios = <&pio 1 10 GPIO_ACTIVE_LOW>; /* PB10 */
	};

	/*
	 * Both LDO3 and LDO4 are used in parallel to power up the
	 * WiFi/BT Chip.
	 */
	vcc_wifi: wifi_reg {
		compatible = "coupled-voltage-regulator";
		regulator-name = "vcc-wifi";
		vin0-supply = <&reg_ldo3>;
		vin1-supply = <&reg_ldo4>;
	};
};

&codec {
	status = "okay";
};

&ehci0 {
	status = "okay";
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins_a>;
	status = "okay";

	axp209: pmic@34 {
		reg = <0x34>;

		/*
		* The interrupt is routed through the "External Fast
		* Interrupt Request" pin (ball G13 of the module)
		* directly to the main interrupt controller, without
		* any other controller interfering.
		*/
		interrupts = <0>;
	};
};

#include "axp209.dtsi"

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins_a>;
	status = "okay";
};

&i2s0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2s0_data_pins_a>, <&i2s0_data_pins_a>;
	status = "okay";
        clock-frequency = <400000>;

        tsc@24 {
                compatible = "cy,cyttsp5_i2c_adapter";
                reg = <0x24>;

                /* GPIO 38, high-to-low edge triggered */
                interrupts = <6 2>;
                interrupt-parent = <&gpio2>;
                cy,adapter_id = "cyttsp5_i2c_adapter";

                cy,core {
                        cy,name = "cyttsp5_core";

                        cy,irq_gpio = <205>;
                        cy,rst_gpio = <138>;
                        cy,boot_mode_gpio = <139>;
                        cy,hid_desc_register = <1>;
                        /*CY_CORE_FLAG_RESTORE_PARAMETERS */
                        cy,flags = <4>;
                        /* CY_CORE_EWG_NONE */
                        cy,easy_wakeup_gesture = <0>;
                        cy,btn_keys = <172 /* KEY_HOMEPAGE */
                                           /* previously was KEY_HOME, new Android ver use KEY_HOMEPAGE */
                                       139 /* KEY_MENU */
                                       158 /* KEY_BACK */
                                       217 /* KEY_SEARCH */
                                       114 /* KEY_VOLUMEDOWN */
                                       115 /* KEY_VOLUMEUP */
                                       212 /* KEY_CAMERA */
                                       116>; /* KEY_POWER */
                        cy,btn_keys-tag = <0>;

                        cy,mt {
                                cy,name = "cyttsp5_mt";

                                cy,inp_dev_name = "cyttsp5_mt";
                                /* CY_MT_FLAG_FLIP | CY_MT_FLAG_INV_X | CY_MT_FLAG_INV_Y */
                                cy,flags = <0x38>;
                                cy,abs =
                                        /* ABS_MT_POSITION_X, CY_ABS_MIN_X, CY_ABS_MAX_X, 0, 0 */
                                        <0x35 0 880 0 0
                                        /* ABS_MT_POSITION_Y, CY_ABS_MIN_Y, CY_ABS_MAX_Y, 0, 0 */
                                        0x36 0 1280 0 0
                                        /* ABS_MT_PRESSURE, CY_ABS_MIN_P, CY_ABS_MAX_P, 0, 0 */
                                        0x3a 0 255 0 0
                                        /* CY_IGNORE_VALUE, CY_ABS_MIN_W, CY_ABS_MAX_W, 0, 0 */
                                        0xffff 0 255 0 0
                                        /* ABS_MT_TRACKING_ID, CY_ABS_MIN_T, CY_ABS_MAX_T, 0, 0 */
                                        0x39 0 15 0 0
                                        /* ABS_MT_TOUCH_MAJOR, 0, 255, 0, 0 */
                                        0x30 0 255 0 0
                                        /* ABS_MT_TOUCH_MINOR, 0, 255, 0, 0 */
                                        0x31 0 255 0 0
                                        /* ABS_MT_ORIENTATION, -127, 127, 0, 0 */
                                        0x34 0xffffff81 127 0 0
                                        /* ABS_MT_TOOL_TYPE, 0, MT_TOOL_MAX, 0, 0 */
                                        0x37 0 1 0 0
                                        /* ABS_MT_DISTANCE, 0, 255, 0, 0 */
                                        0x3b 0 255 0 0>;

                                cy,vkeys_x = <720>;
                                cy,vkeys_y = <1280>;

                                cy,virtual_keys = /* KeyCode CenterX CenterY Width Height */
                                        /* KEY_BACK */
                                        <158 1360 90 160 180
                                        /* KEY_MENU */
                                        139 1360 270 160 180
                                        /* KEY_HOMEPAGE */
                                        172 1360 450 160 180
                                        /* KEY SEARCH */
                                        217 1360 630 160 180>;
                        };

                        cy,btn {
                                cy,name = "cyttsp5_btn";

                                cy,inp_dev_name = "cyttsp5_btn";
                        };
                };
        };
};

&lradc {
	vref-supply = <&reg_ldo2>;
	status = "okay";
};

&mmc0 {
	pinctrl-names = "default";
	pinctrl-0 = <&mmc0_pins_a>;
	vmmc-supply = <&vcc_wifi>;
	mmc-pwrseq = <&mmc0_pwrseq>;
	bus-width = <4>;
	non-removable;
	status = "okay";
};

&nfc {
	pinctrl-names = "default";
	pinctrl-0 = <&nand_pins_a &nand_cs0_pins_a &nand_rb0_pins_a>;
	status = "okay";

	nand@0 {
		#address-cells = <2>;
		#size-cells = <2>;
		reg = <0>;
		allwinner,rb = <0>;
		nand-ecc-mode = "hw";
		nand-on-flash-bbt;

		spl@0 {
			label = "SPL";
			reg = /bits/ 64 <0x0 0x400000>;
		};

		spl-backup@400000 {
			label = "SPL.backup";
			reg = /bits/ 64 <0x400000 0x400000>;
		};

		u-boot@800000 {
			label = "U-Boot";
			reg = /bits/ 64 <0x800000 0x400000>;
		};

		env@c00000 {
			label = "env";
			reg = /bits/ 64 <0xc00000 0x400000>;
		};

		rootfs@1000000 {
			label = "rootfs";
			reg = /bits/ 64 <0x1000000 0x1ff000000>;
		};
	};
};

&ohci0 {
	status = "okay";
};

&otg_sram {
	status = "okay";
};

&pio {
	usb0_id_pin_crumb: usb0-id-pin@0 {
		allwinner,pins = "PG2";
		allwinner,function = "gpio_in";
		allwinner,drive = <SUN4I_PINCTRL_10_MA>;
		allwinner,pull = <SUN4I_PINCTRL_NO_PULL>;
	};

	wifi_reg_on_pin_crumb: wifi-reg-on-pin@0 {
		allwinner,pins = "PB10";
		allwinner,function = "gpio_out";
		allwinner,drive = <SUN4I_PINCTRL_10_MA>;
		allwinner,pull = <SUN4I_PINCTRL_NO_PULL>;
	};
};

&pwm {
	pinctrl-names = "default";
	pinctrl-0 = <&pwm0_pins_a>, <&pwm1_pins_a>;
	status = "okay";
};

&reg_dcdc2 {
	regulator-min-microvolt = <1000000>;
	regulator-max-microvolt = <1400000>;
	regulator-name = "vdd-cpu";
	regulator-always-on;
};

&reg_dcdc3 {
	regulator-min-microvolt = <1000000>;
	regulator-max-microvolt = <1300000>;
	regulator-name = "vdd-sys";
	regulator-always-on;
};

&reg_ldo1 {
	regulator-name = "vdd-rtc";
};

&reg_ldo2 {
	regulator-min-microvolt = <2700000>;
	regulator-max-microvolt = <3300000>;
	regulator-name = "avcc";
	regulator-always-on;
};

&reg_ldo3 {
	regulator-min-microvolt = <3300000>;
	regulator-max-microvolt = <3300000>;
	regulator-name = "vcc-wifi-1";
};

&reg_ldo4 {
	regulator-min-microvolt = <3300000>;
	regulator-max-microvolt = <3300000>;
	regulator-name = "vcc-wifi-2";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins_a>, <&uart1_cts_rts_pins_a>;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart2_pins_a>, <&uart2_cts_rts_pins_a>;
	status = "okay";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart3_pins_a>, <&uart3_cts_rts_pins_a>;
	status = "okay";
};

&usb_otg {
	/*
	 * The GR8-EVB has a somewhat interesting design. There's a
	 * pin supposed to control VBUS, an ID pin, a VBUS detect pin,
	 * so everything should work just fine.
	 *
	 * Except that the pin supposed to control VBUS is not
	 * connected to any controllable output, neither to the SoC
	 * through a GPIO or to the PMIC, and it is pulled down,
	 * meaning that we will never be able to enable VBUS on this
	 * board.
	 */
	dr_mode = "otg";
	status = "okay";
};

&usb_power_supply {
	status = "okay";
};

&usbphy {
	pinctrl-names = "default";
	pinctrl-0 = <&usb0_id_pin_crumb>;
	usb0_id_det-gpio = <&pio 6 2 GPIO_ACTIVE_HIGH>; /* PG2 */
	usb0_vbus_power-supply = <&usb_power_supply>;
	usb1_vbus-supply = <&reg_vcc5v0>;
	status = "okay";
};
